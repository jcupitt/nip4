- check the driver script that runs all test workspaces .. do we need to
  implement batch mode?

	need --test and --prefix

	need to run the driver script from meson

- check each test workspace visually against nip2

  done

	test_conv.ws
	test_colour.ws


- hist_plot doesn't seem to work

- falsecolour doesn't work

	Filter_enhance_item.Falsecolour_item.action Q2

- scale / offset settings from nip2 workspaces are not being applied to
  thumbnails on load

- bitwise browse doesn't work

	Filter_browse_multiband_item.Bitwise_item.action V1


- error bar should be in workspace (ie. below the tab bar), not in mainwindow

  if we moved it down, you'd be able to click on the error indictor on a tab
  and the tab label wouldn't move up and down as the message changed

- colour edit swatches have different corner rounding ... how is this done?
  can we do this for rowview?

	widget sets gtk_widget_add_css_class "left", "right" etc., then
	theme CSS sets eg.

		colorswatch.top > overlay {
			border-top-left-radius: 5px;
			border-top-right-radius: 5px;
		}

	"overlay" is the "css-name" of the image widget in the colorswatch

	"colorswatch" is the css_class of the swatch widget

- on new image in iimageview

    - don't clear the tile pyramid completely, certainly not if dimensiopns
      are unchanged

    - don't lose zoom, pan, scale, offset, etc.

- this fails:

	im_insertset main sub x y
		= foldr add_another main (zip2 x y)
	{
		add_another [x, y] im = insert x y sub im;
	}

  you have to do:

		add_another pos im
			= insert x y sub im
		{
			x = pos?0;
			y = pos?1;
		}

  strange!

- in a workspace do:

	x = [1, 2, 3]

  now ZF expressions which use x will stop working, eg.:

	[x * 2 :: x <- [1..]]

- row reset doesn't always work

  and editing a row doesn't always "take"

- syntax error in startup .def stops nip4 loading

- ctrl-bsp for delete selected?

- should we support

	A1.value + [1, 2, 3]

  ought to be easy and safe, though it's a lot of copy-paste

	maybe we can common-up some more code to make it easier?

  nip2 does it in the vector class, eg.

	A1 + Vector [10, 20, 30]

- should we wrap all vips8 operators? eg. could make

	vips_add a b = vips_call "add" [a, b] []

  as we do for vips7

	  not very useful? we'd lose optional args

  maybe:

	vips_add options a b = vips_call "add" [a, b] options

	x = vips_add [$uchar => true] y z

## widgets TODO

- still to do:

    (void) g_type_class_ref(TYPE_CLOCK);
    (void) g_type_class_ref(TYPE_FONTNAME);
    (void) g_type_class_ref(TYPE_GROUP);
    (void) g_type_class_ref(TYPE_NUMBER);
    (void) g_type_class_ref(TYPE_PLOT);
    (void) g_type_class_ref(TYPE_REAL);
    (void) g_type_class_ref(TYPE_STRING);
    (void) g_type_class_ref(TYPE_VECTOR);

  maybe skip clock

## vips8

- vipsobject

	vo_new() could allocate the args array dynamically

	use vo_set_required_input() in the body of vo_call_fill_spine()

## rows

- add multi-select to file open?

	gtk makes it hard to support single and multiple file select in
	one action

- implement range select then drag

	awkward to do since select is on the model, not the view

	we'd need to make a floating column (not just a columnview) and
	reparent the rows to it

## small

- new row type ... enter " (double quotes) as first character, then there's no
  need to terminate the string

  displayed slightly differently? maybe display all cells which are just a
  static string like this?

  maybe allow eg. "<span background=\"white\">hello</span>" too?

	formula isn't a great place to do this -- eg. "<function>" won't parse
	as markup

	a special graphical view widget for top-level strings would be better

## imagewindow

- next/prev in imagewindow often fails

	to do with background load and region ownership

	a libvips release build hides the error

	might fix region display error too

- need something to make next/prev block while the current image is loading

	we had this, when did it go?

	need it back anyway

- need something to make sure only one image loads at once?

- fix imagewindow copy/paste

  add copy/paste to mainwindow as well

- open imageview window for groups? < and > could move up and down the group

## toolkit browser

- use a filemanager style left bar for the toolkit browser

	does this need libadiwata?

	where should workspace local defs go?

	need something like lpane / rpane

	just a pane with a revealer to make the lhs or rhs show and hide

	remove the "open" button from the top bar?

	use a treeview?

		see the lpane in program.c, but show as tools, not as
		definitions

	put workspace local defs in a pullout on the right? or maybe a popup

	put inside workspaceview, since tools are per workspace?

## ideas

- we have the css_name thing in several _refresh() methods ... should this be
  in the base class?

## can't fix

- open dialogs have a "open read only" toggle at the bottom argh

	not clear how to remove this

- scroll to selected on ws change is annoying, where does it come from>?

	comment out workspacegroupview_switch_page_cb() and it's still there

  add a breakpoint for the scrolling and see what triggers it

  do we have a separate scrolled_window for each tab? what does the
  gtk_adjustment_set_value for the swin when we flip to it?

	wtf gtk_adjustment_set_value() is not being called on page flip,
	yet it's scrolling!

	maybe we should reset the scrollbars in
	workspacegroupview_switch_page_cb() from the saved view port

	no idea why this is happening

- expand and close buttons in column title should be grey when label text is
  grey

	doesn't seem to be possible with gtkimage

  column entry needs a background colour to make it more visible

	entry text {
	  background-color: dimgrey;
	}

  works, but looks terrible

- imagedisplay should not draw the focus rect ... get the base widget class
  to do that for us

	  doesn't seem to be possible with drawing area?

- see if having a rowview menu for every row has a significant overhead

	x.ws has 1,000 rows

		before 366mb
		after: 566mb

	about 200mb, so /1000 is 200kb per row

	a significant saving!

	ws load is much faster without a menu per row

- when we drag a tab out, can we position the new window more intelligently?

	doesn't seem to be possible

- tab name vanishes in old wsgview, current tab indicators stop working

	in workspacegroupview_create_window_cb()

	is workspaceviewlabel doing something wrong?

	maybe we can force a redraw somehow?

	wsview->label hide/show?

		tried lots of things, none worked

	newer gtk4 doesn't seem to help

