## region display

- updating:

	regionview is a child of imageui (on imageui->regionview)

	on an update to iregion, we need to find all imageui which are
	displaying the iimage upon which this region is defined

		1. from iregion -> iimage
		2. from iimage -> imageui
		3. from imageui -> regionview

	we also need the set of regionviews from the previous update (so we
	can remove old and now unused regionviews)

		4. CLASSMODEL(iregion)->views is a slist of all regionview for
		   this iregion

	in iregiongroupview_refresh():

		iregiongroupview->classmodel is the iregion

		take a copy of CLASSMODEL(iregion)->views as notused

		foreach iimage in CLASSMODEL(iregion)->iimages:

			foreach imageui in iimage->views:

				update old regionview and strike from notused

				or make a new one

		remove any unused regionview

	- we maintain CLASSMODEL(iregion)->views in regionview new and dispose

	- where do we maintain CLASSMODEL(iregion)->iimages

	- where do we maintain iimage->views


- need to set regionview->imageui









	1. CLASS



- we have

	iregion

		the model for "Region"

	iregionview

		the view for a region thumbnail in a workspace ... just a
		subclass of iimageview

	regionview

		support funcs for region drawing and manipulation on imageui

	iregiongroup

		a model that groups together all image windows which are
		displaying a particular region

		the sole child of iregion, made in iregion_parent_add()

		manages ->display, so eg. we only draw regionview for some rows

	iregiongroupview

		the view for iregiongroup

		on refresh, update all regionview, eg on ->display changes etc.





- need to add regionviews on imageui_new()

- not moving regionviews on classmodel change -- we seem to make a new one
  each time

	see iregiongroupview_refresh()

	regionview needs the imageui it's on so we can remove it on refresh


  iregiongroupview_refresh()

	notused = copy of classmodel->views

	loop over classmodel->iimages to get all iimage which iregion has
          defined this region on

		loop over iimage->views to get all imageui

			if we have an old regionview on this imageui for this
			classmodel, strike it from notused

			else, make a new regionview



  right now, imageui->regionviews has all regionviews on that iimage




- seem to leak tilesource?

- repaint imageui on region drag







## row drag

- need to be able to drag rows inside columns, with animation, shadows, etc.

  drag between columns as well?

  drag row to background to make a new column?

  maybe drag to move, ctrl-drag to copy (make a reference), like a file
  mananger?

## small

- next/prev in imagewindow often fail

	to do with background load and region ownership

	a libvips release build hides the error

- need something to make next/prev block while the current image is loading

	we had this, when did it go?

	need it back anyway

- need something to make sure only one image loads at once?

- there's a 20ms timeout in vobject_refresh_queue() ... tune this

- we have workspacegroup_save_selected() and workspace_selected_save() ???

## tab drag

- dragging tabs about can make workspaceviews leak, but only
  sometimes (!!?!?!)

	view_dump(): 2 views
	0x5555596c76f0 Workspaceview count=4
	0x5555595c1860 Workspaceview count=1

## imagewindow

- fix imagewindow copy/paste

  add copy/paste to mainwindow as well

## vips8

- action_proc_add() etc. etc. in action.c needs updating for vips8

## toolkit browser

- use a filemanager style left bar for the toolkit browser

	does this need libadiwata?

	where should workspace local defs go?

	need something like lpane / rpane

	just a pane with a revealer to make the lhs or rhs show and hide

	remove the "open" button from the top bar?

	use a treeview?

		see the lpane in program.c, but show as tools, not as
		definitions

	put workspace local defs in a pullout on the right? or maybe a popup

	put inside workspaceview, since tools are per workspace?

## ideas

- we have the css_name thing in several _refresh() methods ... should this be
  in the base class?

## can't fix

- open dialogs have a "open read only" toggle at the bottom argh

	not clear how to remove this

- scroll to selected on ws change is annoying, where does it come from>?

	comment out workspacegroupview_switch_page_cb() and it's still there

  add a breakpoint for the scrolling and see what triggers it

  do we have a separate scrolled_window for each tab? what does the
  gtk_adjustment_set_value for the swin when we flip to it?

	wtf gtk_adjustment_set_value() is not being called on page flip,
	yet it's scrolling!

	maybe we should reset the scrollbars in
	workspacegroupview_switch_page_cb() from the saved view port

	no idea why this is happening

- expand and close buttons in column title should be grey when label text is
  grey

	doesn't seem to be possible with gtkimage

  column entry needs a background colour to make it more visible

	entry text {
	  background-color: dimgrey;
	}

  works, but looks terrible

- imagedisplay should not draw the focus rect ... get the base widget class
  to do that for us

	  doesn't seem to be possible with drawing area?

- see if having a rowview menu for every row has a significant overhead

	x.ws has 1,000 rows

		before 366mb
		after: 566mb

	about 200mb, so /1000 is 200kb per row

	a significant saving!

	ws load is much faster without a menu per row

- when we drag a tab out, can we position the new window more intelligently?

	doesn't seem to be possible

- tab name vanishes in old wsgview, current tab indicators stop working

	in workspacegroupview_create_window_cb()

	is workspaceviewlabel doing something wrong?

	maybe we can force a redraw somehow?

	wsview->label hide/show?

		tried lots of things, none worked

	newer gtk4 doesn't seem to help

