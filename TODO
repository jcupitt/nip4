## tab drag

- workspaceviewlabel_pressed() should not change workspace, we reply on
  notebook for that, though it can trigger layout

- drag tab to new wsg, ^Q, assert fails in view_real_child_remove()

- can't drag tabs into an existing workspacegroupview

	see https://docs.gtk.org/gtk4/method.Notebook.set_tab_detachable.html

- start x2.ws, new workspace, ^Q, assert fail

  works with x3.ws?

  x3 new ws is:

	workspaceview_init: FIXME we must do stuff
	workspacegroupview_child_add:
	workspaceview_link: FIXME toolkitbrowser, panes, etc.
	icontainer_real_current: parent Workspace "tab1"; child Column "A"
	icontainer_real_current: parent Workspacegroup "x3"; child Workspace "tab1"
	workspacegroupview_child_front:
	set_symbol_drag_type: FIXME .. implement this

  x2 new ws is

	workspaceview_init: FIXME we must do stuff
	workspacegroupview_child_add:
	workspaceview_link: FIXME toolkitbrowser, panes, etc.
	icontainer_real_current: parent Workspace "tab3"; child Column "A"
	icontainer_real_current: parent Workspacegroup "x2"; child Workspace "tab3"
	workspacegroupview_child_front:
	set_symbol_drag_type: FIXME .. implement this

  ^Q assert fail is

	view_model_child_attach
	icontainer_reparent
	workspacegroupview_switch_page_cb
	gtk_notebook_switch_page
	gtk_notebook_remove
	workspacegroupview_child_remove

  stray views being left after drag?

## small

- we have workspacegroup_save_selected() and workspace_selected_save() ???

- add tab "merge into ..."

- add column "merge into ..."

- do we need workspace "merge into ..." as well?

- remove caption stuff for workspaces, eg. second arg in workspace_rename()

- add "duplicate workspace"

- polish "about nip4"

- load x.ws, flip to tab 2, layout is incorrect
  scroll to selected on ws change is annoying

	look at what happens on page flip

	maybe nothing?

	bad layout seems to be caused by a model_layout on a tab that hasn't
	been displayed ... perhaps the sizes are wrong?

	need to layout on every tab select?





- see if having a rowview menu for every row has a significant overhead

	it's very unclear

	x.ws has 1,000 rows

- right click menu on row and ws background do not position popup menu
  correctly

- open view, change row once works, change row a seecond time fails to update

- should share tilesource between iimageview and imagewindow? we seem to
  reload right now


- expand and close buttons in column title should be grey when label text is
  grey

	doesn't seem to be possible with gtkimage

  column entry needs a background colour to make it more visible

	entry text {
	  background-color: dimgrey;
	}

  works, but looks terrible

- we have the css_name thing in several _refresh() methods ... should this be
  in the base class?

- paste into image window

  clipboard paste will need to write a new imageinfo to the heap, and
  can't be saved in workspace files

  in imagewindow_open_current_file() we write the filename back to the iimage,
  but this needs to handle iamges without filenames too

  maybe iimage should listen for "changed" in viewers and update the
  thumbnail and model?

- imagewindow progress stuff should go?

- hook up a progress bar for eg st-francis.jpg load?

- imagedisplay should not draw the focus rect ... get the base widget class
  to do that for us

  doesn't seem to be possible with drawing area?

- try

	save with no filename
	pops save dialog
	save wsg
	... but does not set filename on filemodel
	don't see filename in header bar

- use a filemanager style left bar for the toolkit browser

	- does this need libadiwata?

	- where should workspace local defs go?

- status bar? space free indicator is handy ... could this go somewhere else?
  maybe in "about"?

- make a "progress" widget with throttled updates? could share with
  saveoptions, and move some code out of mainwindow

	- we have progress.c, does that work?

- there's a 20ms timeout in vobject_refresh_queue() ... tune this

