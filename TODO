- row delete needs to queue a layout

- row delete, then column delete causes

	(nip4:1760239): GLib-GObject-CRITICAL **: 17:22:46.299:
		invalid unclassed pointer in cast to 'vObject'




- column delete (uses iobject_destroy(col))
  row delete (uses IDESTROY(row))
  same for column_set_open()
  same for workspace_column_select()
  same after a workspace layout, since col x/y change

	mark the filemodel as dirty
	queue a main_window refresh to update the titlebar
	queue a layout

  perhaps:

	- workspace_set_needs_layout() should set a layout timer

	  get rid of mainwindow_layout()



	- column is the only filemodel that gets saved inside another
	  filemodel and has no heap representation ... so we need a
	  workspace_set_modified(ws, TRUE) in column_dispose, column_select,
	  column_set_open

		done

	- workspace_set_modified(ws, TRUE) emits "changed" on the wsg ...
	  mainwindow should listen for that and queue a refresh

		done

	- view_real_child_remove() and child_add() can queue a relayout

		workspace_set_needs_layout(ws, TRUE)

			adds the ws to the dirty list

		mainwindow_layout() sets a layout timeout for all tagged
		workspaces

		layout should mark the ws as dirty

		done

	- most models are heapmodels ... maybe track ->ws here? currently
	  tracked in row.c, we can just move that over

	- heapmodel_dispose() can workspace_set_modified() and
	  symbol_recalculate_all()







- columns "slip" during background scroll drag

- changes to a row need to update any viewers

	A1 	$HOME/pics/k2.jpg
	A2	$HOME/pics/shark.jpg
	A3 	Image_file A1

  what does nip2 do for this?

	- imagemodel holds all model state for a view (settings etc.)
	- one item is the iimage the model represents
	- listens to "changed" on the iimage and updates the image in the
	  conversion

  row delete should also kill any viewers on that row

- expand and close buttons in column title should be grey when label text is
  grey

	doesn't seem to be possible with gtkimage

  column entry needs a background colour to make it more visible

	entry text {
	  background-color: dimgrey;
	}

  works, but looks terrible

- we have the css_name thing in several _refresh() methods ... should this be
  in the base class?

- ^W on main window does not kill image windows

- maybe vertical columns should sizegroup their width together?

- paste into image window

  clipboard paste will need to write a new imageinfo to the heap, and
  can't be saved in workspace files

  in imagewindow_open_current_file() we write the filename back to the iimage,
  but this needs to handle iamges without filenames too

  maybe iimage should listen for "changed" in viewers and update the
  thumbnail and model?

- imagewindow progress stuff should go?

- hook up a progress bar for eg st-francis.jpg load?

- imagedisplay should not draw the focus rect ... get the base widget class
  to do that for us

  doesn't seem to be possible with drawing area?

- try

	save with no filename
	pops save dialog
	save wsg
	... but does not set filename on filemodel
	don't see filename in header bar

- animate workspace layout

- animate scroll-to-keep-column-visible

	have a look at gtk_viewport_set_scroll_to_focus() ... could this
	do the work for us?

- use a filemanager style left bar for the toolkit browser

	- does this need libadiwata?

	- where should workspace local defs go?

- status bar? space free indicator is handy ... could this go somewhere else?
  maybe in "about"?

- make a "progress" widget with throttled updates? could share with
  saveoptions, and move some code out of mainwindow

	- we have progress.c, does that work?

- there's a 20ms timeout in vobject_refresh_queue() ... tune this

